import script_doc_utils

if __name__ == "__main__":
    md = script_doc_utils.initialize_doc()
    md.new_header(title="Work Summary",level =1)
    md.new_paragraph("We are almost done integrating a remote host workflow with the developer workflow that we have set up so far. The actual mechanics of setting up a docker remote host is pretty trivial: all we have to do is set the $DOCKER_HOST variable in the environment and setup an appropriate ssh tunnel. This integrates cleanly with localstack and our testing framework in general. The one bump in the road is docker volumes. I can't get locally created volumes to the remote host, so the bulk of the work has been in automating a workflow to synchronize a remotely created and hosted named docker volume with a local directory. We are doing this at the moment with the neurocaas_contrib.connect module, which contains contact managers that facilitate easy connection management for execution of shell commands and file transfer. This module is tested in conjunction with an existing EC2 instance- we should see if we can find a smart and still functional way to test this module without relying on an external instance (as this would complicate CI testing). Right now, we just need a way to sync data recursively to and from the remote instance. I'm looking into os.walk, paired with the already created `connect.FTConnection.get/put` methods as a method for NeuroCAASRemoteEnv. If we can get this to work, just calling this periodically in the NeuroCAASRemoteEnv.update_results should fix us up. The correct tests are already in the test_local module.  ")
